using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Resources;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading.Tasks;

namespace Tr.Com.Panaroma.Ngcrd.SecurityVerifyTool
{

    /// <summary>
    /// Use this class for generating service mode password of New Generation Crds.
    /// </summary>
    public class SecurityVerifier
    {
        /// <summary>
        /// Pinnacle dll's and methods successfull return code.
        /// </summary>
        public  const int DLL_SUCCESS_RETURN_CODE = 0;

        /// <summary>
        /// Pinnacle dll's and methods unsuccessfull return code.
        /// </summary>
        public  const int DLL_ERROR_RETURN_CODE = -2;

        /// <summary>
        /// Pinnacle dll's return string's item count after split.
        /// </summary>
        private  const int DLL_OUTSTR_SPLIT_COUNT = 4;

        /// <summary>
        /// Pinnacle dll's output string's split character
        /// </summary>
        private  const string DLL_OUTSTR_SPLIT_CH = " ";

        /// <summary>
        /// Pinnacle dll's output string's security verify key index.
        /// </summary>
        private  const int DLL_OUTSTR_SECURITY_VERIFY_KEY_INDEX = 0;

        /// <summary>
        /// Pinnacle dll's output string's fiscal code index.
        /// </summary>
        private  const int DLL_OUTSTR_FISCAL_CODE_INDEX = 1;

        /// <summary>
        /// Pinnacle dll's output string's fiscal num index.
        /// </summary>
        private const int DLL_OUTSTR_FISCAL_NUM_INDEX = 2;

        /// <summary>
        /// Pinnacle dll's output string's service id index.
        /// </summary>
        private const int DLL_OUTSTR_SERVICE_ID_INDEX = 3;

        /// <summary>
        /// Pinnacle dll's file name.
        /// </summary>
        private const string DLL_ASSEMBLY_FILE_NAME = "crvkgt.dll";


        /// <summary>
        /// Pinnacle dll's service mode password generation method.
        /// </summary>
        /// <param name="inStr">Service Mode Id that generated by New Generation CRD</param>
        /// <param name="outStr">Output string that contains s mode pass, fiscal code, fiscal num and service id</param>
        /// <returns>returns 0 if successfull, returns -2 if unsuccessfull</returns>
        [DllImport(DLL_ASSEMBLY_FILE_NAME)]
        private extern static int GenVerifyKey(string inStr, StringBuilder outStr);

        /// <summary>
        /// This method generates service password via pinnacle's dll without any authentication control.
        /// </summary>
        /// <param name="inSModeId">Service Mode Id that generated by New Generation CRD</param>
        /// <param name="outVerificationKey">Service mode password</param>
        /// <param name="outFiscalCode">New Generation Crd's Fiscal Code</param>
        /// <param name="outFiscalNum">New Generation Crd's Fiscal Num</param>
        /// <param name="outServiceId">Service ID</param>
        /// <param name="outErrDescription">Error Description</param>
        /// <returns>Returns 0 if everthing works well, returns -2 if an error occurs</returns>
        private static int GenerateVerifyKey(
            string inSModeId, 
            out string outVerificationKey,
            out string outFiscalCode,
            out string outFiscalNum,
            out string outServiceId,
            out string outErrDescription)
        {
            outVerificationKey = null;
            outFiscalCode = null;
            outFiscalNum = null;
            outServiceId = null;
            outErrDescription = null;
            try
            {
                if (String.IsNullOrEmpty(inSModeId))
                {
                    throw new Exception("Geçersiz Servis Kimliği");
                }

                StringBuilder dllOutStr = new StringBuilder();
                int dllReturnCode=GenVerifyKey(inSModeId, dllOutStr);

                if (dllReturnCode == DLL_SUCCESS_RETURN_CODE)
                {
                    String[] dllOutStrArr = dllOutStr.ToString().Split(' ');
                    if (dllOutStrArr == null || dllOutStrArr.Length != DLL_OUTSTR_SPLIT_COUNT)
                    {
                        throw new Exception("DLL Veri Çıkışı Hatası");
                    }
                    outVerificationKey = dllOutStrArr[DLL_OUTSTR_SECURITY_VERIFY_KEY_INDEX];
                    outFiscalCode = dllOutStrArr[DLL_OUTSTR_FISCAL_CODE_INDEX];
                    outFiscalNum = dllOutStrArr[DLL_OUTSTR_FISCAL_NUM_INDEX];

                    /**
                     * there is a little bug on pinnacle's dll. 
                     * Service Id is 5 characters, but dll returns some extra characters. 
                     * So, i read first 5 chars.
                     **/
                    outServiceId = dllOutStrArr[DLL_OUTSTR_SERVICE_ID_INDEX].Substring(0,5);
                    outErrDescription = "Hata Yok";
                    return DLL_SUCCESS_RETURN_CODE;

                }
                else if (dllReturnCode == DLL_ERROR_RETURN_CODE)
                {
                    throw new Exception("Geçersiz Servis Kimliği");
                }
                else
                {
                    throw new Exception("DLL Bilinmeyen sonuç");
                }
            }
            catch(Exception ex)
            {
                outErrDescription = ex.Message;
                return DLL_ERROR_RETURN_CODE;
            }
        }

        /// <summary>
        /// This method generates service password via pinnacle's dll with authentication control.
        /// </summary>
        /// <param name="inSModeId">Service Mode Id that generated by New Generation CRD</param>
        /// <param name="inFiscalNum">New Generation Crd's Fiscal Num</param>
        /// <param name="inServiceId">Service ID</param>
        /// <param name="outVerificationKey">Service mode password</param>
        /// <param name="outFiscalCode">New Generation Crd's Fiscal Code</param>
        /// <param name="outFiscalNum">New Generation Crd's Fiscal Num</param>
        /// <param name="outServiceId">Service ID</param>
        /// <param name="outErrDescription">Error Description</param>
        /// <returns>Returns 0 if everthing works well, returns -2 if an error occurs</returns>
        public static int GenerateVerifyKey(
            string inSModeId,
            string inFiscalNum,
            string inServiceId,
            out string outVerificationKey,
            out string outFiscalCode,
            out string outFiscalNum,
            out string outServiceId,
            out string outErrDescription)
        {
            outVerificationKey = null;
            outFiscalCode = null;
            outFiscalNum = null;
            outServiceId = null;
            outErrDescription = null;
            if (String.IsNullOrEmpty(inFiscalNum))
            {
                outErrDescription = "Geçersiz Mali Kod ve Numara";
                return DLL_ERROR_RETURN_CODE;
            }

            if (String.IsNullOrEmpty(inServiceId))
            {
                outErrDescription = "Geçersiz Servis Kimliği";
                return DLL_ERROR_RETURN_CODE;
            }

            string outVerificationKeyTmp=null;
            string outFiscalCodeTmp = null;
            string outFiscalNumTmp = null;
            string outServiceIdTmp = null;
            int genVerifyKeyResult = GenerateVerifyKey(
                inSModeId, 
                out outVerificationKeyTmp, 
                out outFiscalCodeTmp, 
                out outFiscalNumTmp, 
                out outServiceIdTmp, 
                out outErrDescription);

            if (genVerifyKeyResult==DLL_SUCCESS_RETURN_CODE)
            {
                //00000003 kosulu üretim versiyonu cihazlardaki hatadan dolayı eklendi...
                //Cihaz mali hale alınmamış ise fiscalnum 00000003 olarak dönüyor.
                if (outFiscalNumTmp != "00000003" && inFiscalNum != outFiscalNumTmp)
                {
                    outErrDescription = "Cihaza Girilen Servis Kimliği ile Şifre Talebindeki Kimlik Bilgisi Uyuşmuyor veya Cihazın Mali Kod-Numarası Şifre Talebindeki Cihazla Aynı Değil";
                    return DLL_ERROR_RETURN_CODE;
                }
                if (inServiceId!=outServiceIdTmp)
                {
                    outErrDescription = "Cihaza Girilen Servis Kimliği ile Şifre Talebindeki Kimlik Bilgisi Uyuşmuyor veya Cihazın Mali Kod-Numarası Şifre Talebindeki Cihazla Aynı Değil";
                    return DLL_ERROR_RETURN_CODE;
                }

                outVerificationKey = outVerificationKeyTmp;
                outFiscalCode = outFiscalCodeTmp;
                outFiscalNum = outFiscalNumTmp;
                outServiceId = outServiceIdTmp;

                return DLL_SUCCESS_RETURN_CODE;
            }
            else
            {
                return genVerifyKeyResult;
            }
            

        }
    }
}
